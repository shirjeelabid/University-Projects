<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>